{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\reala\\\\OneDrive\\\\Desktop\\\\Hangman_FinalProj\\\\client\\\\hangman\\\\src\\\\components\\\\Hangman.js\";\nimport React, { Component } from 'react';\nimport './Hangman.css';\nimport { randomWord } from './words.js';\nimport step1 from \"./images/nerdguy.png\";\nimport step2 from \"./images/sassygirl.png\";\nimport step3 from \"./images/coolguy.png\";\nimport step4 from \"./images/1.png\";\nimport step5 from \"./images/3.png\";\nimport step6 from \"./images/5.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Hangman extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleGuess = e => {\n      let letter = e.target.value;\n      this.setState(st => ({\n        guessed: st.guessed.add(letter),\n        mistake: st.mistake + (st.answer.includes(letter) ? 0 : 1)\n      }));\n    };\n\n    this.resetButton = () => {\n      this.setState({\n        mistake: 0,\n        guessed: new Set([]),\n        answer: randomWord()\n      });\n    };\n\n    this.state = {\n      mistake: 0,\n      guessed: new Set([]),\n      answer: randomWord()\n    };\n  }\n\n  guessedWord() {\n    return this.state.answer.split(\"\").map(letter => this.state.guessed.has(letter) ? letter : \" _ \");\n  }\n\n  generateButtons() {\n    return \"abcdefghjklmnopqrstuvwxyz\".split(\"\").map(letter => /*#__PURE__*/_jsxDEV(\"button\", {\n      class: \"btn btn-lg btn-primary m-2\",\n      value: letter,\n      onClick: this.handleGuess,\n      disabled: this.state.guessed.has(letter),\n      children: letter\n    }, letter, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this));\n  }\n\n  render() {\n    const gameOver = this.state.mistake >= this.props.maxWrong;\n    const isWinner = this.guessedWord().join(\"\") === this.state.answer;\n    let gameStat = this.generateButtons();\n\n    if (isWinner) {\n      gameStat = \"You Won!!!\";\n    }\n\n    if (gameOver) {\n      gameStat = \"You Lost!!!\";\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Hangman container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-center\",\n        children: \"Hangman\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"float-right\",\n        children: [\"Wrong Guesses: \", this.state.mistake, \" of \", this.props.maxWrong]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: this.props.images[this.state.mistake],\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Guess the Programming Language:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: !gameOver ? this.guessedWord() : this.state.answer\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: gameStat\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-info\",\n          onClick: this.resetButton,\n          children: \"Reset\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nHangman.defaultProps = {\n  maxWrong: 6,\n  images: [step1, step2, step3, step4, step5, step6]\n};\nexport default Hangman;","map":{"version":3,"names":["React","Component","randomWord","step1","step2","step3","step4","step5","step6","Hangman","constructor","props","handleGuess","e","letter","target","value","setState","st","guessed","add","mistake","answer","includes","resetButton","Set","state","guessedWord","split","map","has","generateButtons","render","gameOver","maxWrong","isWinner","join","gameStat","images","defaultProps"],"sources":["C:/Users/reala/OneDrive/Desktop/Hangman_FinalProj/client/hangman/src/components/Hangman.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport './Hangman.css';\r\nimport { randomWord } from './words.js';\r\n\r\nimport step1 from \"./images/nerdguy.png\";\r\nimport step2 from \"./images/sassygirl.png\";\r\nimport step3 from \"./images/coolguy.png\";\r\nimport step4 from \"./images/1.png\";\r\nimport step5 from \"./images/3.png\";\r\nimport step6 from \"./images/5.png\";\r\n\r\nclass Hangman extends Component {\r\n static defaultProps = {\r\n    maxWrong: 6, \r\n    images: [step1, step2, step3, step4, step5, step6]\r\n}\r\n\r\nconstructor(props) {\r\n    super(props);\r\n    this.state = {\r\n        mistake: 0,\r\n        guessed: new Set([]),\r\n        answer: randomWord()\r\n    }\r\n}\r\n   \r\n    handleGuess = e => {\r\n    let letter = e.target.value;\r\n    this.setState(st => ({\r\n      guessed: st.guessed.add(letter),\r\n      mistake: st.mistake + (st.answer.includes(letter) ? 0 : 1)\r\n    }));\r\n  }\r\n\r\n  guessedWord() {\r\n    return this.state.answer.split(\"\").map(letter => (this.state.guessed.has(letter) ? letter : \" _ \"));\r\n  }\r\n\r\n  generateButtons() {\r\n    return \"abcdefghjklmnopqrstuvwxyz\".split(\"\").map(letter => (\r\n      <button\r\n        class='btn btn-lg btn-primary m-2'\r\n        key={letter}\r\n        value={letter}\r\n        onClick={this.handleGuess}\r\n        disabled={this.state.guessed.has(letter)}\r\n      >\r\n        {letter}\r\n      </button>\r\n    ));\r\n  }\r\n\r\n  resetButton = () => {\r\n    this.setState({\r\n      mistake: 0,\r\n      guessed: new Set([]),\r\n      answer: randomWord()\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const gameOver = this.state.mistake >= this.props.maxWrong;\r\n    const isWinner = this.guessedWord().join(\"\") === this.state.answer;\r\n    let gameStat = this.generateButtons();\r\n\r\n    if (isWinner) {\r\n      gameStat = \"You Won!!!\"\r\n    }\r\n\r\n    if (gameOver) {\r\n      gameStat = \"You Lost!!!\"\r\n    }\r\n\r\n    return (\r\n      <div className=\"Hangman container\">\r\n        <h1 className='text-center'>Hangman</h1>\r\n        <div className=\"float-right\">Wrong Guesses: {this.state.mistake} of {this.props.maxWrong}</div>\r\n        <div className=\"text-center\">\r\n          <img src={this.props.images[this.state.mistake]} alt=\"\"/>\r\n        </div>\r\n        <div className=\"text-center\">\r\n          <p>Guess the Programming Language:</p>\r\n          <p>\r\n            {!gameOver ? this.guessedWord() : this.state.answer}\r\n          </p>\r\n          <p>{gameStat}</p>\r\n          <button className='btn btn-info' onClick={this.resetButton}>Reset</button>\r\n        </div>\r\n      </div>\r\n )\r\n}\r\n}\r\n\r\nexport default Hangman;\r\n"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,eAAP;AACA,SAASC,UAAT,QAA2B,YAA3B;AAEA,OAAOC,KAAP,MAAkB,sBAAlB;AACA,OAAOC,KAAP,MAAkB,wBAAlB;AACA,OAAOC,KAAP,MAAkB,sBAAlB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;;;AAEA,MAAMC,OAAN,SAAsBR,SAAtB,CAAgC;EAMhCS,WAAW,CAACC,KAAD,EAAQ;IACf,MAAMA,KAAN;;IADe,KASfC,WATe,GASDC,CAAC,IAAI;MACnB,IAAIC,MAAM,GAAGD,CAAC,CAACE,MAAF,CAASC,KAAtB;MACA,KAAKC,QAAL,CAAcC,EAAE,KAAK;QACnBC,OAAO,EAAED,EAAE,CAACC,OAAH,CAAWC,GAAX,CAAeN,MAAf,CADU;QAEnBO,OAAO,EAAEH,EAAE,CAACG,OAAH,IAAcH,EAAE,CAACI,MAAH,CAAUC,QAAV,CAAmBT,MAAnB,IAA6B,CAA7B,GAAiC,CAA/C;MAFU,CAAL,CAAhB;IAID,CAfgB;;IAAA,KAmCjBU,WAnCiB,GAmCH,MAAM;MAClB,KAAKP,QAAL,CAAc;QACZI,OAAO,EAAE,CADG;QAEZF,OAAO,EAAE,IAAIM,GAAJ,CAAQ,EAAR,CAFG;QAGZH,MAAM,EAAEpB,UAAU;MAHN,CAAd;IAKD,CAzCgB;;IAEf,KAAKwB,KAAL,GAAa;MACTL,OAAO,EAAE,CADA;MAETF,OAAO,EAAE,IAAIM,GAAJ,CAAQ,EAAR,CAFA;MAGTH,MAAM,EAAEpB,UAAU;IAHT,CAAb;EAKH;;EAUCyB,WAAW,GAAG;IACZ,OAAO,KAAKD,KAAL,CAAWJ,MAAX,CAAkBM,KAAlB,CAAwB,EAAxB,EAA4BC,GAA5B,CAAgCf,MAAM,IAAK,KAAKY,KAAL,CAAWP,OAAX,CAAmBW,GAAnB,CAAuBhB,MAAvB,IAAiCA,MAAjC,GAA0C,KAArF,CAAP;EACD;;EAEDiB,eAAe,GAAG;IAChB,OAAO,4BAA4BH,KAA5B,CAAkC,EAAlC,EAAsCC,GAAtC,CAA0Cf,MAAM,iBACrD;MACE,KAAK,EAAC,4BADR;MAGE,KAAK,EAAEA,MAHT;MAIE,OAAO,EAAE,KAAKF,WAJhB;MAKE,QAAQ,EAAE,KAAKc,KAAL,CAAWP,OAAX,CAAmBW,GAAnB,CAAuBhB,MAAvB,CALZ;MAAA,UAOGA;IAPH,GAEOA,MAFP;MAAA;MAAA;MAAA;IAAA,QADK,CAAP;EAWD;;EAUDkB,MAAM,GAAG;IACP,MAAMC,QAAQ,GAAG,KAAKP,KAAL,CAAWL,OAAX,IAAsB,KAAKV,KAAL,CAAWuB,QAAlD;IACA,MAAMC,QAAQ,GAAG,KAAKR,WAAL,GAAmBS,IAAnB,CAAwB,EAAxB,MAAgC,KAAKV,KAAL,CAAWJ,MAA5D;IACA,IAAIe,QAAQ,GAAG,KAAKN,eAAL,EAAf;;IAEA,IAAII,QAAJ,EAAc;MACZE,QAAQ,GAAG,YAAX;IACD;;IAED,IAAIJ,QAAJ,EAAc;MACZI,QAAQ,GAAG,aAAX;IACD;;IAED,oBACE;MAAK,SAAS,EAAC,mBAAf;MAAA,wBACE;QAAI,SAAS,EAAC,aAAd;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QAAK,SAAS,EAAC,aAAf;QAAA,8BAA6C,KAAKX,KAAL,CAAWL,OAAxD,UAAqE,KAAKV,KAAL,CAAWuB,QAAhF;MAAA;QAAA;QAAA;QAAA;MAAA,QAFF,eAGE;QAAK,SAAS,EAAC,aAAf;QAAA,uBACE;UAAK,GAAG,EAAE,KAAKvB,KAAL,CAAW2B,MAAX,CAAkB,KAAKZ,KAAL,CAAWL,OAA7B,CAAV;UAAiD,GAAG,EAAC;QAArD;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QAHF,eAME;QAAK,SAAS,EAAC,aAAf;QAAA,wBACE;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADF,eAEE;UAAA,UACG,CAACY,QAAD,GAAY,KAAKN,WAAL,EAAZ,GAAiC,KAAKD,KAAL,CAAWJ;QAD/C;UAAA;UAAA;UAAA;QAAA,QAFF,eAKE;UAAA,UAAIe;QAAJ;UAAA;UAAA;UAAA;QAAA,QALF,eAME;UAAQ,SAAS,EAAC,cAAlB;UAAiC,OAAO,EAAE,KAAKb,WAA/C;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QANF;MAAA;QAAA;QAAA;QAAA;MAAA,QANF;IAAA;MAAA;MAAA;MAAA;IAAA,QADF;EAiBH;;AA/E+B;;AAA1Bf,O,CACE8B,Y,GAAe;EACnBL,QAAQ,EAAE,CADS;EAEnBI,MAAM,EAAE,CAACnC,KAAD,EAAQC,KAAR,EAAeC,KAAf,EAAsBC,KAAtB,EAA6BC,KAA7B,EAAoCC,KAApC;AAFW,C;AAiFvB,eAAeC,OAAf"},"metadata":{},"sourceType":"module"}